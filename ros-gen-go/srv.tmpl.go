package main

import (
	"os"
	"time"
)

func srvTmplBytes() ([]byte, error) {
	return bindataRead(
		_srvTmpl,
		"srv.tmpl",
	)
}

func srvTmpl() (*asset, error) {
	bytes, err := srvTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "", size: int64(len(bytes)), mode: os.FileMode(436), modTime: time.Unix(1507566040, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srvTmpl = []byte{
  0x1f, 0x8b, 0x08, 0x08, 0xd8, 0xa1, 0xdb, 0x59, 0x00, 0x03, 0x73, 0x72,
  0x76, 0x2e, 0x74, 0x6d, 0x70, 0x6c, 0x00, 0x8d, 0x54, 0x4d, 0x6f, 0xda,
  0x40, 0x10, 0x3d, 0xe3, 0x5f, 0x31, 0xdd, 0x43, 0x04, 0x51, 0xb1, 0x4f,
  0xb9, 0x54, 0xea, 0xa1, 0x2d, 0xad, 0xca, 0x01, 0x52, 0xc5, 0xdc, 0x93,
  0x8d, 0x3d, 0x58, 0x56, 0xf1, 0xae, 0xb3, 0xbb, 0x86, 0x22, 0x8b, 0xff,
  0xde, 0xfd, 0xb2, 0x09, 0xb0, 0x01, 0x73, 0x5a, 0xbf, 0x99, 0xf7, 0x98,
  0xef, 0x24, 0x81, 0x1f, 0x3c, 0x47, 0x28, 0x90, 0xa1, 0xa0, 0x0a, 0x73,
  0x78, 0xdd, 0x83, 0xe0, 0x72, 0xaa, 0x81, 0x69, 0xc1, 0xe3, 0x28, 0x49,
  0x40, 0xf2, 0x46, 0x64, 0xf8, 0x05, 0xda, 0x16, 0xe2, 0x5f, 0xe5, 0x06,
  0xe7, 0x6c, 0xcd, 0xe3, 0x39, 0x33, 0xcf, 0xef, 0x54, 0x22, 0x1c, 0x0e,
  0xc6, 0x6b, 0xf6, 0x08, 0xcb, 0xc7, 0x15, 0xfc, 0x9c, 0xcd, 0x57, 0x9f,
  0xa2, 0x9a, 0x66, 0x7f, 0x69, 0x81, 0xa7, 0x94, 0x3f, 0x0e, 0x5c, 0xd2,
  0xca, 0x72, 0xa2, 0xb2, 0xaa, 0xb9, 0x50, 0x30, 0x8e, 0x46, 0x6d, 0x3b,
  0x85, 0x72, 0x0d, 0x5c, 0x40, 0x9c, 0xd6, 0x98, 0xc5, 0x4f, 0xf8, 0xd6,
  0xa0, 0x54, 0xf6, 0xfd, 0x9b, 0xca, 0x74, 0x53, 0x66, 0x18, 0x36, 0x7d,
  0x13, 0x82, 0xee, 0x7b, 0x93, 0xac, 0x39, 0x93, 0x18, 0xa6, 0x9d, 0xda,
  0x1c, 0x4f, 0x47, 0x31, 0x22, 0xc8, 0x32, 0x9e, 0x97, 0xac, 0x48, 0x5e,
  0x4b, 0x46, 0xc5, 0x9e, 0x68, 0x68, 0x5d, 0x29, 0xe2, 0xa2, 0x42, 0x96,
  0x3b, 0xaf, 0x92, 0x93, 0x28, 0x02, 0x93, 0x90, 0xa0, 0xac, 0xe8, 0x64,
  0x7d, 0x4a, 0xd2, 0xf8, 0x00, 0x10, 0x93, 0xae, 0x7e, 0x12, 0xeb, 0xd8,
  0x93, 0x27, 0x91, 0xa9, 0x4f, 0x8a, 0x62, 0x6b, 0xe2, 0x51, 0xfb, 0x1a,
  0xa1, 0x42, 0x45, 0x73, 0xaa, 0x68, 0x64, 0xbf, 0x9e, 0x53, 0xb1, 0x35,
  0x54, 0x2b, 0xe9, 0xcb, 0x03, 0x52, 0x89, 0x26, 0x53, 0xd0, 0x6a, 0x2d,
  0x66, 0x20, 0xfd, 0xd3, 0x90, 0x8e, 0x53, 0x03, 0x55, 0xfe, 0x20, 0x9b,
  0xea, 0x1d, 0xa0, 0xf0, 0x9f, 0x3a, 0xf1, 0x10, 0xf8, 0xb6, 0x32, 0xd2,
  0xba, 0x95, 0xf1, 0x02, 0xa5, 0xd4, 0x41, 0x9a, 0x6f, 0x6b, 0x91, 0x41,
  0x8b, 0x6e, 0xc8, 0xba, 0x61, 0x19, 0x8c, 0x15, 0xdc, 0x87, 0x02, 0x9a,
  0x80, 0x79, 0x8c, 0x27, 0xfe, 0x3f, 0x40, 0x17, 0x02, 0x55, 0x23, 0x18,
  0xa8, 0xd8, 0xc6, 0x77, 0xb8, 0x45, 0x5f, 0xcc, 0x1e, 0xd2, 0xa6, 0x0a,
  0x0a, 0xf8, 0x7c, 0x6e, 0x4a, 0xac, 0x74, 0x9a, 0x41, 0x01, 0x9b, 0xff,
  0x4d, 0xba, 0x9f, 0x1d, 0x93, 0xae, 0x56, 0x39, 0x2b, 0xc0, 0x7b, 0xb9,
  0xae, 0x7a, 0x03, 0x14, 0xdd, 0x58, 0x0d, 0x91, 0x94, 0xc3, 0x24, 0x97,
  0xb8, 0xf3, 0xa3, 0xe2, 0x05, 0xbb, 0xc1, 0x31, 0x93, 0x00, 0x9d, 0x20,
  0xc3, 0xdd, 0xf8, 0x82, 0x6b, 0x7a, 0xb8, 0xa5, 0x42, 0x6f, 0x14, 0x40,
  0x68, 0xa4, 0xbe, 0xc2, 0x5d, 0x70, 0xd4, 0xda, 0x68, 0x34, 0x22, 0x57,
  0x56, 0x35, 0x39, 0x67, 0x90, 0xcf, 0x36, 0x16, 0xd2, 0xe3, 0xae, 0xb7,
  0x47, 0xcb, 0x4b, 0x6f, 0x79, 0xa2, 0x3b, 0x0d, 0xbf, 0x38, 0x78, 0x21,
  0x8b, 0x73, 0x29, 0xdf, 0x93, 0x2b, 0x76, 0x57, 0x61, 0xe3, 0x60, 0x57,
  0xc9, 0x6e, 0xcc, 0xb5, 0x6d, 0x81, 0xae, 0xcf, 0x17, 0x5e, 0x1e, 0xf7,
  0x3e, 0x4e, 0x37, 0xe0, 0xe4, 0x0c, 0xc7, 0x85, 0x90, 0x70, 0x1f, 0x9c,
  0x25, 0xdf, 0xe9, 0xd3, 0xbe, 0x1f, 0x7b, 0x7e, 0x27, 0xbb, 0x63, 0xd5,
  0x37, 0xfd, 0x03, 0x25, 0x39, 0x44, 0xc9, 0x87, 0x7b, 0xb0, 0xc7, 0xe4,
  0xa3, 0xcc, 0x22, 0x6d, 0x50, 0x58, 0xd5, 0x1b, 0x7d, 0xca, 0x81, 0x54,
  0xb2, 0x88, 0x6b, 0x2a, 0x54, 0x49, 0x37, 0xb1, 0xd2, 0x20, 0xb9, 0xbc,
  0xa1, 0xf6, 0x10, 0x07, 0x05, 0x7d, 0x15, 0x86, 0x2a, 0x1e, 0xcf, 0xab,
  0x91, 0xfc, 0x0f, 0xfe, 0x6b, 0x1b, 0x69, 0x57, 0x06, 0x00, 0x00 }

