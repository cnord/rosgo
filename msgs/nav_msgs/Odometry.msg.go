// Code generated by ros-gen-go.
// source: Odometry.msg
// DO NOT EDIT!
package nav_msgs

import (
	"io"

	"github.com/cnord/rosgo/msgs/geometry_msgs"
	"github.com/cnord/rosgo/msgs/std_msgs"
	"github.com/cnord/rosgo/ros"
)

type _MsgOdometry struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgOdometry) Text() string {
	return t.text
}

func (t *_MsgOdometry) Name() string {
	return t.name
}

func (t *_MsgOdometry) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgOdometry) NewMessage() ros.Message {
	m := new(Odometry)

	return m
}

var (
	MsgOdometry = &_MsgOdometry{
		`# This represents an estimate of a position and velocity in free space.  
# The pose in this message should be specified in the coordinate frame given by header.frame_id.
# The twist in this message should be specified in the coordinate frame given by the child_frame_id
Header header
string child_frame_id
geometry_msgs/PoseWithCovariance pose
geometry_msgs/TwistWithCovariance twist
`,
		"nav_msgs/Odometry",
		"cd5e73d190d741a2f92e81eda573aca7",
	}
)

type Odometry struct {
	Header       std_msgs.Header
	ChildFrameId string
	Pose         geometry_msgs.PoseWithCovariance
	Twist        geometry_msgs.TwistWithCovariance
}

func (m *Odometry) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "Header", &m.Header); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "string", &m.ChildFrameId); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "geometry_msgs/PoseWithCovariance", &m.Pose); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "geometry_msgs/TwistWithCovariance", &m.Twist); err != nil {
		return err
	}

	return
}

func (m *Odometry) Deserialize(r io.Reader) (err error) {
	// Header
	if err = ros.DeserializeMessageField(r, "Header", &m.Header); err != nil {
		return err
	}

	// ChildFrameId
	if err = ros.DeserializeMessageField(r, "string", &m.ChildFrameId); err != nil {
		return err
	}

	// Pose
	if err = ros.DeserializeMessageField(r, "geometry_msgs/PoseWithCovariance", &m.Pose); err != nil {
		return err
	}

	// Twist
	if err = ros.DeserializeMessageField(r, "geometry_msgs/TwistWithCovariance", &m.Twist); err != nil {
		return err
	}

	return
}
