// Code generated by ros-gen-go.
// source: MessageInterval.srv
// DO NOT EDIT!
package mavros_msgs

import (
	"io"

	"github.com/cnord/rosgo/ros"
)

// Service type metadata
type _SrvMessageInterval struct {
	name    string
	md5sum  string
	text    string
	reqType ros.MessageType
	resType ros.MessageType
}

func (t *_SrvMessageInterval) Name() string                  { return t.name }
func (t *_SrvMessageInterval) MD5Sum() string                { return t.md5sum }
func (t *_SrvMessageInterval) Text() string                  { return t.text }
func (t *_SrvMessageInterval) RequestType() ros.MessageType  { return t.reqType }
func (t *_SrvMessageInterval) ResponseType() ros.MessageType { return t.resType }
func (t *_SrvMessageInterval) NewService() ros.Service {
	return new(MessageInterval)
}

var (
	SrvMessageInterval = &_SrvMessageInterval{
		"mavros_msgs/MessageInterval",
		"99e633e185b7ee6b477bc9843a87b5ae",
		`# sets message interval
# See MAV_CMD_SET_MESSAGE_INTERVAL

uint32 message_id
float32 message_rate
---
bool success
`,
		MsgMessageIntervalRequest,
		MsgMessageIntervalResponse,
	}
)

type MessageInterval struct {
	Request  MessageIntervalRequest
	Response MessageIntervalResponse
}

func (s *MessageInterval) ReqMessage() ros.Message { return &s.Request }
func (s *MessageInterval) ResMessage() ros.Message { return &s.Response }

// MessageIntervalRequest

type _MsgMessageIntervalRequest struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgMessageIntervalRequest) Text() string {
	return t.text
}

func (t *_MsgMessageIntervalRequest) Name() string {
	return t.name
}

func (t *_MsgMessageIntervalRequest) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgMessageIntervalRequest) NewMessage() ros.Message {
	m := new(MessageIntervalRequest)

	return m
}

var (
	MsgMessageIntervalRequest = &_MsgMessageIntervalRequest{
		`# sets message interval
# See MAV_CMD_SET_MESSAGE_INTERVAL

uint32 message_id
float32 message_rate
`,
		"mavros_msgs/MessageIntervalRequest",
		"",
	}
)

type MessageIntervalRequest struct {
	MessageId   uint32
	MessageRate float32
}

func (m *MessageIntervalRequest) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "uint32", &m.MessageId); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.MessageRate); err != nil {
		return err
	}

	return
}

func (m *MessageIntervalRequest) Deserialize(r io.Reader) (err error) {
	// MessageId
	if err = ros.DeserializeMessageField(r, "uint32", &m.MessageId); err != nil {
		return err
	}

	// MessageRate
	if err = ros.DeserializeMessageField(r, "float32", &m.MessageRate); err != nil {
		return err
	}

	return
}

// MessageIntervalResponse

type _MsgMessageIntervalResponse struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgMessageIntervalResponse) Text() string {
	return t.text
}

func (t *_MsgMessageIntervalResponse) Name() string {
	return t.name
}

func (t *_MsgMessageIntervalResponse) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgMessageIntervalResponse) NewMessage() ros.Message {
	m := new(MessageIntervalResponse)

	return m
}

var (
	MsgMessageIntervalResponse = &_MsgMessageIntervalResponse{
		`
bool success
`,
		"mavros_msgs/MessageIntervalResponse",
		"",
	}
)

type MessageIntervalResponse struct {
	Success bool
}

func (m *MessageIntervalResponse) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "bool", &m.Success); err != nil {
		return err
	}

	return
}

func (m *MessageIntervalResponse) Deserialize(r io.Reader) (err error) {
	// Success
	if err = ros.DeserializeMessageField(r, "bool", &m.Success); err != nil {
		return err
	}

	return
}
