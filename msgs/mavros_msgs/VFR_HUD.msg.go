// Code generated by ros-gen-go.
// source: VFR_HUD.msg
// DO NOT EDIT!
package mavros_msgs

import (
	"io"

	"github.com/cnord/rosgo/msgs/std_msgs"
	"github.com/cnord/rosgo/ros"
)

type _MsgVFR_HUD struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgVFR_HUD) Text() string {
	return t.text
}

func (t *_MsgVFR_HUD) Name() string {
	return t.name
}

func (t *_MsgVFR_HUD) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgVFR_HUD) NewMessage() ros.Message {
	m := new(VFR_HUD)

	return m
}

var (
	MsgVFR_HUD = &_MsgVFR_HUD{
		`# Metrics typically displayed on a HUD for fixed wing aircraft
#
# VFR_HUD message

std_msgs/Header header
float32 airspeed	# m/s
float32 groundspeed	# m/s
int16 heading		# degrees 0..360
float32 throttle		# normalized to 0.0..1.0
float32 altitude		# MSL
float32 climb		# current climb rate m/s
`,
		"mavros_msgs/VFR_HUD",
		"1f55e210c3d39fe105d44d8dc963655f",
	}
)

type VFR_HUD struct {
	Header      std_msgs.Header
	Airspeed    float32
	Groundspeed float32
	Heading     int16
	Throttle    float32
	Altitude    float32
	Climb       float32
}

func (m *VFR_HUD) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "std_msgs/Header", &m.Header); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.Airspeed); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.Groundspeed); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "int16", &m.Heading); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.Throttle); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.Altitude); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.Climb); err != nil {
		return err
	}

	return
}

func (m *VFR_HUD) Deserialize(r io.Reader) (err error) {
	// Header
	if err = ros.DeserializeMessageField(r, "std_msgs/Header", &m.Header); err != nil {
		return err
	}

	// Airspeed
	if err = ros.DeserializeMessageField(r, "float32", &m.Airspeed); err != nil {
		return err
	}

	// Groundspeed
	if err = ros.DeserializeMessageField(r, "float32", &m.Groundspeed); err != nil {
		return err
	}

	// Heading
	if err = ros.DeserializeMessageField(r, "int16", &m.Heading); err != nil {
		return err
	}

	// Throttle
	if err = ros.DeserializeMessageField(r, "float32", &m.Throttle); err != nil {
		return err
	}

	// Altitude
	if err = ros.DeserializeMessageField(r, "float32", &m.Altitude); err != nil {
		return err
	}

	// Climb
	if err = ros.DeserializeMessageField(r, "float32", &m.Climb); err != nil {
		return err
	}

	return
}
