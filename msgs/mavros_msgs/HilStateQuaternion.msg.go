// Code generated by ros-gen-go.
// source: HilStateQuaternion.msg
// DO NOT EDIT!
package mavros_msgs

import (
	"io"

	"github.com/cnord/rosgo/msgs/geographic_msgs"
	"github.com/cnord/rosgo/msgs/geometry_msgs"
	"github.com/cnord/rosgo/msgs/std_msgs"
	"github.com/cnord/rosgo/ros"
)

type _MsgHilStateQuaternion struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgHilStateQuaternion) Text() string {
	return t.text
}

func (t *_MsgHilStateQuaternion) Name() string {
	return t.name
}

func (t *_MsgHilStateQuaternion) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgHilStateQuaternion) NewMessage() ros.Message {
	m := new(HilStateQuaternion)

	return m
}

var (
	MsgHilStateQuaternion = &_MsgHilStateQuaternion{
		`# HilStateQuaternion.msg
#
# ROS representation of MAVLink HIL_STATE_QUATERNION
# See mavlink message documentation here:
# https://pixhawk.ethz.ch/mavlink/#HIL_STATE_QUATERNION

std_msgs/Header header

geometry_msgs/Quaternion orientation
geometry_msgs/Vector3 angular_velocity
geometry_msgs/Vector3 linear_acceleration
geometry_msgs/Vector3 linear_velocity
geographic_msgs/GeoPoint geo
float32 ind_airspeed
float32 true_airspeed
`,
		"mavros_msgs/HilStateQuaternion",
		"c858c0f05d4ab30256be7c53edee8e3c",
	}
)

type HilStateQuaternion struct {
	Header             std_msgs.Header
	Orientation        geometry_msgs.Quaternion
	AngularVelocity    geometry_msgs.Vector3
	LinearAcceleration geometry_msgs.Vector3
	LinearVelocity     geometry_msgs.Vector3
	Geo                geographic_msgs.GeoPoint
	IndAirspeed        float32
	TrueAirspeed       float32
}

func (m *HilStateQuaternion) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "std_msgs/Header", &m.Header); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "geometry_msgs/Quaternion", &m.Orientation); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "geometry_msgs/Vector3", &m.AngularVelocity); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "geometry_msgs/Vector3", &m.LinearAcceleration); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "geometry_msgs/Vector3", &m.LinearVelocity); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "geographic_msgs/GeoPoint", &m.Geo); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.IndAirspeed); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float32", &m.TrueAirspeed); err != nil {
		return err
	}

	return
}

func (m *HilStateQuaternion) Deserialize(r io.Reader) (err error) {
	// Header
	if err = ros.DeserializeMessageField(r, "std_msgs/Header", &m.Header); err != nil {
		return err
	}

	// Orientation
	if err = ros.DeserializeMessageField(r, "geometry_msgs/Quaternion", &m.Orientation); err != nil {
		return err
	}

	// AngularVelocity
	if err = ros.DeserializeMessageField(r, "geometry_msgs/Vector3", &m.AngularVelocity); err != nil {
		return err
	}

	// LinearAcceleration
	if err = ros.DeserializeMessageField(r, "geometry_msgs/Vector3", &m.LinearAcceleration); err != nil {
		return err
	}

	// LinearVelocity
	if err = ros.DeserializeMessageField(r, "geometry_msgs/Vector3", &m.LinearVelocity); err != nil {
		return err
	}

	// Geo
	if err = ros.DeserializeMessageField(r, "geographic_msgs/GeoPoint", &m.Geo); err != nil {
		return err
	}

	// IndAirspeed
	if err = ros.DeserializeMessageField(r, "float32", &m.IndAirspeed); err != nil {
		return err
	}

	// TrueAirspeed
	if err = ros.DeserializeMessageField(r, "float32", &m.TrueAirspeed); err != nil {
		return err
	}

	return
}
