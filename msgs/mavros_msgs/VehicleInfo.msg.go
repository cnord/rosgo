// Code generated by ros-gen-go.
// source: VehicleInfo.msg
// DO NOT EDIT!
package mavros_msgs

import (
	"io"

	"github.com/cnord/rosgo/msgs/std_msgs"
	"github.com/cnord/rosgo/ros"
)

const (
	VehicleInfo_HAVE_INFO_HEARTBEAT         uint8 = 1
	VehicleInfo_HAVE_INFO_AUTOPILOT_VERSION uint8 = 2
)

type _MsgVehicleInfo struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgVehicleInfo) Text() string {
	return t.text
}

func (t *_MsgVehicleInfo) Name() string {
	return t.name
}

func (t *_MsgVehicleInfo) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgVehicleInfo) NewMessage() ros.Message {
	m := new(VehicleInfo)

	return m
}

var (
	MsgVehicleInfo = &_MsgVehicleInfo{
		`# Vehicle Info msg

std_msgs/Header header

uint8 HAVE_INFO_HEARTBEAT = 1
uint8 HAVE_INFO_AUTOPILOT_VERSION = 2
uint8 available_info		# Bitmap shows what info is available

# Vehicle address
uint8 sysid                     # SYSTEM ID
uint8 compid                    # COMPONENT ID

# -*- Heartbeat info -*-
uint8 autopilot                 # MAV_AUTOPILOT
uint8 type                      # MAV_TYPE
uint8 system_status             # MAV_STATE
uint8 base_mode
uint32 custom_mode
string mode                     # MAV_MODE string
uint32 mode_id                  # MAV_MODE number

# -*- Autopilot version -*-
uint64 capabilities             # MAV_PROTOCOL_CAPABILITY
uint32 flight_sw_version        # Firmware version number
uint32 middleware_sw_version    # Middleware version number
uint32 os_sw_version            # Operating system version number
uint32 board_version            # HW / board version (last 8 bytes should be silicon ID, if any)
uint16 vendor_id                # ID of the board vendor
uint16 product_id               # ID of the product
uint64 uid                      # UID if provided by hardware
`,
		"mavros_msgs/VehicleInfo",
		"68ac9e63349db04d0cf8dd45a9a5b283",
	}
)

type VehicleInfo struct {
	Header              std_msgs.Header
	AvailableInfo       uint8
	Sysid               uint8
	Compid              uint8
	Autopilot           uint8
	Type                uint8
	SystemStatus        uint8
	BaseMode            uint8
	CustomMode          uint32
	Mode                string
	ModeId              uint32
	Capabilities        uint64
	FlightSwVersion     uint32
	MiddlewareSwVersion uint32
	OsSwVersion         uint32
	BoardVersion        uint32
	VendorId            uint16
	ProductId           uint16
	UID                 uint64
}

func (m *VehicleInfo) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "std_msgs/Header", &m.Header); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint8", &m.AvailableInfo); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint8", &m.Sysid); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint8", &m.Compid); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint8", &m.Autopilot); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint8", &m.Type); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint8", &m.SystemStatus); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint8", &m.BaseMode); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint32", &m.CustomMode); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "string", &m.Mode); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint32", &m.ModeId); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint64", &m.Capabilities); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint32", &m.FlightSwVersion); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint32", &m.MiddlewareSwVersion); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint32", &m.OsSwVersion); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint32", &m.BoardVersion); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint16", &m.VendorId); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint16", &m.ProductId); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "uint64", &m.UID); err != nil {
		return err
	}

	return
}

func (m *VehicleInfo) Deserialize(r io.Reader) (err error) {
	// Header
	if err = ros.DeserializeMessageField(r, "std_msgs/Header", &m.Header); err != nil {
		return err
	}

	// AvailableInfo
	if err = ros.DeserializeMessageField(r, "uint8", &m.AvailableInfo); err != nil {
		return err
	}

	// Sysid
	if err = ros.DeserializeMessageField(r, "uint8", &m.Sysid); err != nil {
		return err
	}

	// Compid
	if err = ros.DeserializeMessageField(r, "uint8", &m.Compid); err != nil {
		return err
	}

	// Autopilot
	if err = ros.DeserializeMessageField(r, "uint8", &m.Autopilot); err != nil {
		return err
	}

	// Type
	if err = ros.DeserializeMessageField(r, "uint8", &m.Type); err != nil {
		return err
	}

	// SystemStatus
	if err = ros.DeserializeMessageField(r, "uint8", &m.SystemStatus); err != nil {
		return err
	}

	// BaseMode
	if err = ros.DeserializeMessageField(r, "uint8", &m.BaseMode); err != nil {
		return err
	}

	// CustomMode
	if err = ros.DeserializeMessageField(r, "uint32", &m.CustomMode); err != nil {
		return err
	}

	// Mode
	if err = ros.DeserializeMessageField(r, "string", &m.Mode); err != nil {
		return err
	}

	// ModeId
	if err = ros.DeserializeMessageField(r, "uint32", &m.ModeId); err != nil {
		return err
	}

	// Capabilities
	if err = ros.DeserializeMessageField(r, "uint64", &m.Capabilities); err != nil {
		return err
	}

	// FlightSwVersion
	if err = ros.DeserializeMessageField(r, "uint32", &m.FlightSwVersion); err != nil {
		return err
	}

	// MiddlewareSwVersion
	if err = ros.DeserializeMessageField(r, "uint32", &m.MiddlewareSwVersion); err != nil {
		return err
	}

	// OsSwVersion
	if err = ros.DeserializeMessageField(r, "uint32", &m.OsSwVersion); err != nil {
		return err
	}

	// BoardVersion
	if err = ros.DeserializeMessageField(r, "uint32", &m.BoardVersion); err != nil {
		return err
	}

	// VendorId
	if err = ros.DeserializeMessageField(r, "uint16", &m.VendorId); err != nil {
		return err
	}

	// ProductId
	if err = ros.DeserializeMessageField(r, "uint16", &m.ProductId); err != nil {
		return err
	}

	// UID
	if err = ros.DeserializeMessageField(r, "uint64", &m.UID); err != nil {
		return err
	}

	return
}
