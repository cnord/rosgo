// Code generated by ros-gen-go.
// source: WaypointList.msg
// DO NOT EDIT!
package mavros_msgs

import (
	"encoding/binary"
	"fmt"
	"io"

	"github.com/cnord/rosgo/ros"
)

type _MsgWaypointList struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgWaypointList) Text() string {
	return t.text
}

func (t *_MsgWaypointList) Name() string {
	return t.name
}

func (t *_MsgWaypointList) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgWaypointList) NewMessage() ros.Message {
	m := new(WaypointList)

	return m
}

var (
	MsgWaypointList = &_MsgWaypointList{
		`# WaypointList.msg
#
#  :current_seq:   seq nr of currently active waypoint
#                  waypoints[current_seq].is_current == True
#
#  :waypoints:     list of waypoints

uint16 current_seq
mavros_msgs/Waypoint[] waypoints
`,
		"mavros_msgs/WaypointList",
		"2cacdc0c2c212eb99fdee9f12d2e1fa4",
	}
)

type WaypointList struct {
	CurrentSeq uint16
	Waypoints  []Waypoint
}

func (m *WaypointList) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "uint16", &m.CurrentSeq); err != nil {
		return err
	}

	// Write size little endian
	err = binary.Write(w, binary.LittleEndian, uint32(len(m.Waypoints)))
	if err != nil {
		return fmt.Errorf("could not write array length: %s", err)
	}
	for _, elem := range m.Waypoints {
		if err = ros.SerializeMessageField(w, "mavros_msgs/Waypoint", &elem); err != nil {
			return err
		}
	}

	return
}

func (m *WaypointList) Deserialize(r io.Reader) (err error) {
	// CurrentSeq
	if err = ros.DeserializeMessageField(r, "uint16", &m.CurrentSeq); err != nil {
		return err
	}

	// Waypoints
	{
		// Read size little endian
		var size uint32
		if err = binary.Read(r, binary.LittleEndian, &size); err != nil {
			return fmt.Errorf("cannot read array size for Waypoints: %s", err)
		}
		m.Waypoints = make([]Waypoint, int(size))
		for i := 0; i < int(size); i++ {
			if err = ros.DeserializeMessageField(r, "mavros_msgs/Waypoint", &m.Waypoints[i]); err != nil {
				return err
			}
		}
	}

	return
}
