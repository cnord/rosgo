// Code generated by ros-gen-go.
// source: TopicStatistics.msg
// DO NOT EDIT!
package rosgraph_msgs

import (
	"io"

	"github.com/cnord/rosgo/ros"
)

type _MsgTopicStatistics struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgTopicStatistics) Text() string {
	return t.text
}

func (t *_MsgTopicStatistics) Name() string {
	return t.name
}

func (t *_MsgTopicStatistics) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgTopicStatistics) NewMessage() ros.Message {
	m := new(TopicStatistics)

	return m
}

var (
	MsgTopicStatistics = &_MsgTopicStatistics{
		`# name of the topic
string topic

# node id of the publisher
string node_pub

# node id of the subscriber
string node_sub

# the statistics apply to this time window
time window_start
time window_stop

# number of messages delivered during the window
int32 delivered_msgs
# numbers of messages dropped during the window
int32 dropped_msgs

# traffic during the window, in bytes
int32 traffic

# mean/stddev/max period between two messages
duration period_mean
duration period_stddev
duration period_max

# mean/stddev/max age of the message based on the
# timestamp in the message header. In case the
# message does not have a header, it will be 0.
duration stamp_age_mean
duration stamp_age_stddev
duration stamp_age_max
`,
		"rosgraph_msgs/TopicStatistics",
		"10152ed868c5097a5e2e4a89d7daa710",
	}
)

type TopicStatistics struct {
	Topic          string
	NodePub        string
	NodeSub        string
	WindowStart    ros.Time
	WindowStop     ros.Time
	DeliveredMsgs  int32
	DroppedMsgs    int32
	Traffic        int32
	PeriodMean     ros.Duration
	PeriodStddev   ros.Duration
	PeriodMax      ros.Duration
	StampAgeMean   ros.Duration
	StampAgeStddev ros.Duration
	StampAgeMax    ros.Duration
}

func (m *TopicStatistics) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "string", &m.Topic); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "string", &m.NodePub); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "string", &m.NodeSub); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "time", &m.WindowStart); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "time", &m.WindowStop); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "int32", &m.DeliveredMsgs); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "int32", &m.DroppedMsgs); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "int32", &m.Traffic); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "duration", &m.PeriodMean); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "duration", &m.PeriodStddev); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "duration", &m.PeriodMax); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "duration", &m.StampAgeMean); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "duration", &m.StampAgeStddev); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "duration", &m.StampAgeMax); err != nil {
		return err
	}

	return
}

func (m *TopicStatistics) Deserialize(r io.Reader) (err error) {
	// Topic
	if err = ros.DeserializeMessageField(r, "string", &m.Topic); err != nil {
		return err
	}

	// NodePub
	if err = ros.DeserializeMessageField(r, "string", &m.NodePub); err != nil {
		return err
	}

	// NodeSub
	if err = ros.DeserializeMessageField(r, "string", &m.NodeSub); err != nil {
		return err
	}

	// WindowStart
	if err = ros.DeserializeMessageField(r, "time", &m.WindowStart); err != nil {
		return err
	}

	// WindowStop
	if err = ros.DeserializeMessageField(r, "time", &m.WindowStop); err != nil {
		return err
	}

	// DeliveredMsgs
	if err = ros.DeserializeMessageField(r, "int32", &m.DeliveredMsgs); err != nil {
		return err
	}

	// DroppedMsgs
	if err = ros.DeserializeMessageField(r, "int32", &m.DroppedMsgs); err != nil {
		return err
	}

	// Traffic
	if err = ros.DeserializeMessageField(r, "int32", &m.Traffic); err != nil {
		return err
	}

	// PeriodMean
	if err = ros.DeserializeMessageField(r, "duration", &m.PeriodMean); err != nil {
		return err
	}

	// PeriodStddev
	if err = ros.DeserializeMessageField(r, "duration", &m.PeriodStddev); err != nil {
		return err
	}

	// PeriodMax
	if err = ros.DeserializeMessageField(r, "duration", &m.PeriodMax); err != nil {
		return err
	}

	// StampAgeMean
	if err = ros.DeserializeMessageField(r, "duration", &m.StampAgeMean); err != nil {
		return err
	}

	// StampAgeStddev
	if err = ros.DeserializeMessageField(r, "duration", &m.StampAgeStddev); err != nil {
		return err
	}

	// StampAgeMax
	if err = ros.DeserializeMessageField(r, "duration", &m.StampAgeMax); err != nil {
		return err
	}

	return
}
