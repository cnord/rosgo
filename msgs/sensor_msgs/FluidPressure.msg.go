// Code generated by ros-gen-go.
// source: FluidPressure.msg
// DO NOT EDIT!
package sensor_msgs

import (
	"io"

	"github.com/cnord/rosgo/msgs/std_msgs"
	"github.com/cnord/rosgo/ros"
)

type _MsgFluidPressure struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgFluidPressure) Text() string {
	return t.text
}

func (t *_MsgFluidPressure) Name() string {
	return t.name
}

func (t *_MsgFluidPressure) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgFluidPressure) NewMessage() ros.Message {
	m := new(FluidPressure)

	return m
}

var (
	MsgFluidPressure = &_MsgFluidPressure{
		` # Single pressure reading.  This message is appropriate for measuring the
 # pressure inside of a fluid (air, water, etc).  This also includes
 # atmospheric or barometric pressure.

 # This message is not appropriate for force/pressure contact sensors.

 Header header           # timestamp of the measurement
                         # frame_id is the location of the pressure sensor

 float64 fluid_pressure  # Absolute pressure reading in Pascals.

 float64 variance        # 0 is interpreted as variance unknown`,
		"sensor_msgs/FluidPressure",
		"804dc5cea1c5306d6a2eb80b9833befe",
	}
)

type FluidPressure struct {
	Header        std_msgs.Header
	FluidPressure float64
	Variance      float64
}

func (m *FluidPressure) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "Header", &m.Header); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float64", &m.FluidPressure); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float64", &m.Variance); err != nil {
		return err
	}

	return
}

func (m *FluidPressure) Deserialize(r io.Reader) (err error) {
	// Header
	if err = ros.DeserializeMessageField(r, "Header", &m.Header); err != nil {
		return err
	}

	// FluidPressure
	if err = ros.DeserializeMessageField(r, "float64", &m.FluidPressure); err != nil {
		return err
	}

	// Variance
	if err = ros.DeserializeMessageField(r, "float64", &m.Variance); err != nil {
		return err
	}

	return
}
