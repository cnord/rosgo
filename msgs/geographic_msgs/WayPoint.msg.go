// Code generated by ros-gen-go.
// source: WayPoint.msg
// DO NOT EDIT!
package geographic_msgs

import (
	"encoding/binary"
	"fmt"
	"io"

	"github.com/cnord/rosgo/msgs/uuid_msgs"
	"github.com/cnord/rosgo/ros"
)

type _MsgWayPoint struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgWayPoint) Text() string {
	return t.text
}

func (t *_MsgWayPoint) Name() string {
	return t.name
}

func (t *_MsgWayPoint) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgWayPoint) NewMessage() ros.Message {
	m := new(WayPoint)

	return m
}

var (
	MsgWayPoint = &_MsgWayPoint{
		`# Way-point element for a geographic map.

uuid_msgs/UniqueID id   # Unique way-point identifier
GeoPoint   position     # Position relative to WGS 84 ellipsoid
KeyValue[] props        # Key/value properties for this point
`,
		"geographic_msgs/WayPoint",
		"ef04f823aef332455a49eaec3f1761b7",
	}
)

type WayPoint struct {
	Id       uuid_msgs.UniqueID
	Position GeoPoint
	Props    []KeyValue
}

func (m *WayPoint) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "uuid_msgs/UniqueID", &m.Id); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "GeoPoint", &m.Position); err != nil {
		return err
	}

	// Write size little endian
	err = binary.Write(w, binary.LittleEndian, uint32(len(m.Props)))
	if err != nil {
		return fmt.Errorf("could not write array length: %s", err)
	}
	for _, elem := range m.Props {
		if err = ros.SerializeMessageField(w, "KeyValue", &elem); err != nil {
			return err
		}
	}

	return
}

func (m *WayPoint) Deserialize(r io.Reader) (err error) {
	// Id
	if err = ros.DeserializeMessageField(r, "uuid_msgs/UniqueID", &m.Id); err != nil {
		return err
	}

	// Position
	if err = ros.DeserializeMessageField(r, "GeoPoint", &m.Position); err != nil {
		return err
	}

	// Props
	{
		// Read size little endian
		var size uint32
		if err = binary.Read(r, binary.LittleEndian, &size); err != nil {
			return fmt.Errorf("cannot read array size for Props: %s", err)
		}
		m.Props = make([]KeyValue, int(size))
		for i := 0; i < int(size); i++ {
			if err = ros.DeserializeMessageField(r, "KeyValue", &m.Props[i]); err != nil {
				return err
			}
		}
	}

	return
}
